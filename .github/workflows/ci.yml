# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
# ******** NOTE ********

name: "CI"

on:
  push:
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ["14", "16"]
    name: Build with NodeJS v${{ matrix.node }}
    env:
      FORCE_COLOR: 1

    services:
      localstack:
        image: localstack/localstack:0.11.4
        ports:
          - 4567-4600:4567-4600
        env:
          SERVICES: s3,dynamodb,secretsmanager,sqs,logs,elasticsearch

      mongodb:
        image: mongo
        ports:
          - 37017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: webda.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.14.0

      - name: Setup postgresql
        uses: Softwarepark/postgresql-action@v2
        with:
          postgresql version: "13" # See https://hub.docker.com/_/postgres for available versions
          postgresql password: webda.io
          postgresql user: webda.io
          postgresql db: webda.io
          postgresql init scripts: packages/postgres/test/sql

      - name: Install dependencies
        run: yarn

      - name: Build project
        run: yarn run build

      - name: Run core tests
        run: yarn run test --scope @webda/core

      - name: Run Postgres tests
        run: yarn run test --scope @webda/postgres

      - name: Run shell tests
        run: yarn run test --scope @webda/shell

      - name: Run AWS tests
        run: yarn run test --scope @webda/aws

      - name: Run other modules tests
        run: yarn run test --ignore @webda/shell  --ignore @webda/aws  --ignore @webda/core --ignore @webda/postgres

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
